/*
 Copyright (C) Giuliano Catrambone (giuliano.catrambone@catrasoftware.it)

 This program is free software; you can redistribute it and/or 
 modify it under the terms of the GNU General Public License 
 as published by the Free Software Foundation; either 
 version 2 of the License, or (at your option) any later 
 version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program; if not, write to the Free Software
 Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

 Commercial use other than under the terms of the GNU General Public
 License is allowed only after express negotiation of conditions
 with the authors.
*/


#ifndef SocketErrors_h
	#define SocketErrors_h

	#include "Error.h"
	#include <iostream>


	/**
	
		Click <a href="SocketErrors.C#SocketErrors" target=classContent>here</a> for the errors strings.
	*/
	enum SocketErrorsCodes {

		// SocketImpl
		SCK_SOCKETIMPL_CREATE_FAILED,
		SCK_SOCKETIMPL_CONNECT_FAILED,
		SCK_SOCKETIMPL_BIND_FAILED,
		SCK_SOCKETIMPL_LISTEN_FAILED,
		SCK_SOCKETIMPL_SETBLOCKING_FAILED,
		SCK_SOCKETIMPL_GETBLOCKING_FAILED,
		SCK_SOCKETIMPL_ISREADYFORREADING_FAILED,
		SCK_SOCKETIMPL_ISREADYFORWRITING_FAILED,
		SCK_SOCKETIMPL_ISTHEREEXCEPTION_FAILED,
		SCK_SOCKETIMPL_ACCEPTCONNECTION_FAILED,
		SCK_SOCKETIMPL_CLOSE_FAILED,
		SCK_SOCKETIMPL_VACUUM_FAILED,
		SCK_SOCKETIMPL_VACUUMBYTELNET_FAILED,
		SCK_SOCKETIMPL_WAITFORBUFFER_FAILED,
		SCK_SOCKETIMPL_READ_FAILED,
		SCK_SOCKETIMPL_READLINE_FAILED,
		SCK_SOCKETIMPL_READLINEBYTELNET_FAILED,
		SCK_SOCKETIMPL_READBYTELNET_FAILED,
		SCK_SOCKETIMPL_TELNETDECODER_FAILED,
		SCK_SOCKETIMPL_WRITESTRING_FAILED,
		SCK_SOCKETIMPL_WRITE_FAILED,
		SCK_SOCKETIMPL_GETREMOTEADDRESS_FAILED,
		SCK_SOCKETIMPL_GETREMOTEPORT_FAILED,
		SCK_SOCKETIMPL_GETLOCALADDRESS_FAILED,
		SCK_SOCKETIMPL_GETLOCALPORT_FAILED,
		SCK_SOCKETIMPL_GETIPADDRESSESLIST_FAILED,
		SCK_SOCKETIMPL_SETRECEIVINGTIMEOUT_FAILED,
		SCK_SOCKETIMPL_SETSENDINGTIMEOUT_FAILED,
		SCK_SOCKETIMPL_SETMAXSENDBUFFER_FAILED,
		SCK_SOCKETIMPL_SETMAXRECEIVEBUFFER_FAILED,
		SCK_SOCKETIMPL_SETKEEPALIVE_FAILED,
		SCK_SOCKETIMPL_SETNODELAY_FAILED,
		SCK_SOCKETIMPL_GETMACADDRESS_FAILED,
		SCK_SOCKETIMPL_TIMEOUTEXPIRED,
		SCK_SOCKETIMPL_FD_SETSIZETOBEINCREMENTED,
		SCK_SOCKETIMPL_MACADDRESSNOTFOUND,

		// Socket
		SCK_SOCKET_INIT_FAILED,
		SCK_SOCKET_FINISH_FAILED,
		SCK_SOCKET_GETSOCKETIMPL_FAILED,

		// ClientSocket
		SCK_CLIENTSOCKET_INIT_FAILED,
		SCK_CLIENTSOCKET_FINISH_FAILED,
		SCK_CLIENTSOCKET_REINIT_FAILED,
		SCK_CLIENTSOCKET_SETIDENTIFIER_FAILED,
		SCK_CLIENTSOCKET_GETIDENTIFIER_FAILED,

		// TelnetClient
		SCK_TELNETCLIENT_INIT_FAILED,
		SCK_TELNETCLIENT_FINISH_FAILED,

		// ServerSocket
		SCK_SERVERSOCKET_INIT_FAILED,
		SCK_SERVERSOCKET_FINISH_FAILED,
		SCK_SERVERSOCKET_ACCEPTCONNECTION_FAILED,

		// SocketsPool
		SCK_SOCKETSPOOL_INIT_FAILED,
		SCK_SOCKETSPOOL_FINISH_FAILED,
		SCK_SOCKETSPOOL_ADDSOCKET_FAILED,
		SCK_SOCKETSPOOL_DELETESOCKET_FAILED,
		SCK_SOCKETSPOOL_UPDATESOCKETSTATUS_FAILED,
		SCK_SOCKETSPOOL_CHECKSOCKETSSTATUS_FAILED,
		SCK_SOCKETSPOOL_FINDSERVERSOCKET_FAILED,
		SCK_SOCKETSPOOL_SETISSHUTDOWN_FAILED,
		SCK_SOCKETSPOOL_GETISSHUTDOWN_FAILED,
		SCK_SOCKETSPOOL_SOCKETSTATUSNOTCHANGED,
		SCK_SOCKETSPOOL_SOCKETALREADYADDED,
		SCK_SOCKETSPOOL_SOCKETNOTFOUND,
		SCK_SOCKETSPOOL_KEYDUPLICATED,
		SCK_SOCKETSPOOL_REACHEDMAXSOCKETSNUMBER,
		SCK_SOCKETSPOOL_FREESOCKETSVECTORNOTCONSISTENT,
		SCK_SOCKETSPOOL_WRONGSOCKETTYPE,
		SCK_SOCKETSPOOL_POOLEMPTY,

		// ClientSocketsPool
		SCK_CLIENTSOCKETSPOOL_INIT_FAILED,
		SCK_CLIENTSOCKETSPOOL_FINISH_FAILED,
		SCK_CLIENTSOCKETSPOOL_GETFREECLIENTSOCKET_FAILED,
		SCK_CLIENTSOCKETSPOOL_RELEASECLIENTSOCKET_FAILED,
		SCK_CLIENTSOCKETSPOOL_CLIENTSOCKETTYPEALREADYPRESENT,
		SCK_CLIENTSOCKETSPOOL_NOCLIENTSOCKETAVAILABLE,
		SCK_CLIENTSOCKETSPOOL_CLIENTSOCKETTYPENOTFOUND,

		// common
		SCK_CREATE_FAILED,
		SCK_CONNECT_FAILED,
		SCK_CONNECT_EINPROGRESSFAILED,
		SCK_REMOTEADDRESS_TOOLONG,
		SCK_SETSOCKOPT_FAILED,
		SCK_BIND_FAILED,
		SCK_LISTEN_FAILED,
		SCK_ACCEPT_FAILED,
		SCK_CLOSE_FAILED,
		SCK_WRITE_FAILED,
		SCK_SEND_FAILED,
		SCK_READ_FAILED,
		SCK_READ_EOFREACHED,
		SCK_SELECT_FAILED,
		SCK_POLL_FAILED,
		SCK_FCNTL_FAILED,
		SCK_IOCTLSOCKET_FAILED,
		SCK_GETTIMEOFDAY_FAILED,
		SCK_FCNTL_RETURNUNKNOWN,
		SCK_BUFFER_SMALL,
		SCK_NOTHINGTOREAD,
		SCK_NOTREADYFORWRITING,
		SCK_WSASTARTUP_FAILED,		// windows
		SCK_WSACLEANUP_FAILED,		// windows
		SCK_WSAIOCTL_FAILED,		// windows
		SCK_NETBIOS_FAILED,		// windows
		SCK_GETADAPTERSINFO_FAILED,		// windows
		SCK_IOCTL_FAILED,			// linux
		SCK_ACTIVATION_WRONG,
		SCK_NEW_FAILED,
		SCK_OPERATION_NOTALLOWED,

		// Insert here other errors...

		SCK_MAXERRORS
	} ;

	#ifdef WIN32
		// warning C4267: 'argument' : conversion from 'size_t' to 'long', possible loss of data

		#pragma warning (disable : 4267)
	#endif

	// declaration of class error
	dclCustomErrorClass (SocketErrors, SCK_MAXERRORS)
 
#endif

